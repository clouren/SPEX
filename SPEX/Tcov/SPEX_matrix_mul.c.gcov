        -:    0:Source:SPEX_matrix_mul.c
        -:    0:Graph:SPEX_matrix_mul.gcno
        -:    0:Data:SPEX_matrix_mul.gcda
        -:    0:Runs:9
        -:    1://------------------------------------------------------------------------------
        -:    2:// SPEX_Util/SPEX_matrix_mul: multiplies a matrix by a scalar
        -:    3://------------------------------------------------------------------------------
        -:    4:
        -:    5:// SPEX_Util: (c) 2019-2021, Chris Lourenco (US Naval Academy), Jinhao Chen,
        -:    6:// Erick Moreno-Centeno, Timothy A. Davis, Texas A&M.  All Rights Reserved.
        -:    7:// SPDX-License-Identifier: GPL-2.0-or-later or LGPL-3.0-or-later
        -:    8:
        -:    9://------------------------------------------------------------------------------
        -:   10:
        -:   11:/* Purpose: This function multiplies the matrix x (CSC, triplet, or dense) by a
        -:   12: * scalar.  This function requires x to have type mpz_t.
        -:   13: *
        -:   14: * On output the values of x are modified.
        -:   15: */
        -:   16:
        -:   17:#include "spex_util_internal.h"
        -:   18:
      286:   19:SPEX_info SPEX_matrix_mul   // multiplies x by a scalar
        -:   20:(
        -:   21:    SPEX_matrix *x,         // matrix to be multiplied
        -:   22:    const mpz_t scalar      // scalar to multiply by
        -:   23:)
        -:   24:{
        -:   25:
     286*:   26:    if (!spex_initialized ( )) return (SPEX_PANIC) ;
        -:   27:    //--------------------------------------------------------------------------
        -:   28:    // check inputs
        -:   29:    //--------------------------------------------------------------------------
        -:   30:
        -:   31:    SPEX_info info ;
     286*:   32:    SPEX_REQUIRE_TYPE (x, SPEX_MPZ) ;
     286*:   33:    if (x->kind == SPEX_DYNAMIC_CSC) return (SPEX_INCORRECT_INPUT);
        -:   34:
        -:   35:    //--------------------------------------------------------------------------
        -:   36:    // x = x * scalar
        -:   37:    //--------------------------------------------------------------------------
        -:   38:
        -:   39:    int64_t nz;
      286:   40:    info = SPEX_matrix_nnz (&nz, x, NULL) ;
     286*:   41:    if (info != SPEX_OK) {return info;}
        -:   42:
     1917:   43:    for (int64_t i = 0; i < nz; i++)
        -:   44:    {
        -:   45:        // x[i] = x[i]*scalar
     1642:   46:        SPEX_CHECK( SPEX_mpz_mul( x->x.mpz[i], x->x.mpz[i], scalar));
        -:   47:    }
        -:   48:
      275:   49:    return (SPEX_OK) ;
        -:   50:}
        -:   51:
