        -:    0:Source:SPEX_LU_analysis_free.c
        -:    0:Graph:SPEX_LU_analysis_free.gcno
        -:    0:Data:SPEX_LU_analysis_free.gcda
        -:    0:Runs:9
        -:    1://------------------------------------------------------------------------------
        -:    2:// SPEX_Util/SPEX_LU_analysis_free: Free memory from symbolic analysis struct
        -:    3://------------------------------------------------------------------------------
        -:    4:
        -:    5:// SPEX_Util: (c) 2019-2021, Chris Lourenco (US Naval Academy), Jinhao Chen,
        -:    6:// Erick Moreno-Centeno, Timothy A. Davis, Texas A&M.  All Rights Reserved.
        -:    7:// SPDX-License-Identifier: GPL-2.0-or-later or LGPL-3.0-or-later
        -:    8:
        -:    9://------------------------------------------------------------------------------
        -:   10:
        -:   11:/* Purpose: This function frees the memory of the SPEX_LU_analysis struct
        -:   12: *
        -:   13: * Input is the SPEX_LU_analysis structure, it is destroyed on function
        -:   14: * termination.
        -:   15: */
        -:   16:
        -:   17:#include "spex_util_internal.h"
        -:   18:
     1913:   19:SPEX_info SPEX_LU_analysis_free
        -:   20:(
        -:   21:    SPEX_LU_analysis **S, // Structure to be deleted
        -:   22:    const SPEX_options *option
        -:   23:)
        -:   24:{
    1913*:   25:    if (!spex_initialized ( )) return (SPEX_PANIC) ;
        -:   26:
     1913:   27:    if ((S != NULL) && (*S != NULL))
        -:   28:    {
     1889:   29:        SPEX_FREE ((*S)->q) ;
     1889:   30:        SPEX_FREE (*S) ;
        -:   31:    }
        -:   32:
     1913:   33:    return (SPEX_OK) ;
        -:   34:}
        -:   35:
