symbolic cholesky : DONE, but need to merge it

structral matrix: 
    (1) SPEX_kind, SPEX_type: unchanged, just A->x is NULL, only internal
        (USE THIS)
    (2) SPEX_type of "structural" (NOT THIS ONE)

delete SPEX_TBD

unify all interface for similar functionality
    check on merge

update makefile to generate one single .so
    single user SPEX.h
    TODO

check names of user-visible functions, be consistent
    later

never change user's "option" struct

// LU Chol QR auto
NO: SPEX_Backslash(x, SPEX_type, A, b)

OK: SPEX_Backslash(x, SPEX_type, A, b, option)

NO: SPEX_Backslash(x, SPEX_type, A, b, algo, option), do not use this

TODO: consistent name scheme. SPEX_all_lower_case ?
    SPEX_left_lu_...
    SPEX_chol_...

TODO: merge Developemental and InitMerge branches
    in progress -> Developmental
    create a single SPEX.h, has everying in it

--- Mar 22, 2022

NO: SPEX_analyze(S, A, kind, option)
    -combine algo, SPEX_factorization_kind and SPEX_symbolic_analysis_kind

move spex_check_solution to Tcov

-bool updatable in the SPEX_factorization

-BI-directional conversion between updatable and mpz csc non-updatable
    the whole Factorization, not a matrix

LU and (QR?) solvers should be able to solve A^Tx=b

    F = lu (A)
    solve A'*x = b
    solve A*x = b
    both

*SPEX_matrix_copy const A

*SPEX_update_solve assume updatable? NO, if not updatable, call SPEX_Left_LU_solve

user guide

merge branches


cmake


------------
delete SPEX_factorization_create.c and SPEX_symbolic_analysis_create.c and SPE.c

do we really need SPEX_scale? unify the output of SPEX_***_solve

analysis and factorization for cholesky should only have P_perm and Pinv_perm
check spex_chol_factor and spex_chol_preorder etc.
no assign for P_perm in spex_chol_factor

bug in spex_chol_ereach:

SPEX_LU_analyze or SPEX_Left_LU_analyze (as SPEX_Left_LU_solve)

SPEX_info SPEX_Chol_solve
(
    // Output
    SPEX_matrix** x_handle,           // On input: undefined.
                                      // On output: Rational solution (SPEX_MPQ)
                                      // to the system. 
    // Input
    const SPEX_factorization *F,      // Cholesky factorization<------------------
    const SPEX_matrix* b,             // Right hand side vector
    const SPEX_options* option        // command options
);
vs
SPEX_info SPEX_Update_solve // solves Ax = b via REF LU factorization of A
(
    // Output
    SPEX_matrix **x_handle, // a m*n dense matrix contains the solution to
                            // the system. 
    // input:
    SPEX_factorization *F,  // The LU or Cholesky factorization<------------------
    const SPEX_matrix *b,   // a m*n dense matrix contains the right-hand-side
                            // vector
    const SPEX_options* option // Command options
);


inconsistence between SPEX_matrix_mul and SPEX_matrix_div






